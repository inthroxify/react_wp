{"version":3,"sources":["components/NotFound/index.js","components/Posts/index.js","components/Banner/index.js","App.js","reportWebVitals.js","index.js"],"names":["NotFound","Posts","params","useParams","niceImageUrl","post","url","_embedded","source_url","useState","error","setError","isLoaded","setIsLoaded","posts","setPosts","useEffect","fetch","then","response","ok","json","data","catch","finally","message","id","find","obj","parseInt","className","alt","slug","src","title","rendered","Date","date_gmt","toLocaleString","ReactHtmlParser","content","map","to","Banner","banner","setBanner","imgUrl","style","backgroundImage","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.edc95c74.chunk.js","sourcesContent":["import \"./index.scss\";\n\nconst NotFound = () => {\n  return (\n    <div>Sorry, the thing you were looking for was not found.</div>\n  );\n}\n\nexport default NotFound;\n","import \"./index.scss\";\nimport NotFound from \"../NotFound\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport ReactHtmlParser from 'react-html-parser';\n\nconst Posts = () => {\n  let params = useParams();\n\n  const niceImageUrl = (post) => {\n    let url = \"/blog/logo512.png\";\n    if ( !!post._embedded[\"wp:featuredmedia\"] ) {\n      url = (post._embedded[\"wp:featuredmedia\"][0]).source_url ;\n    }\n    return url;\n  }\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch(`/wp-json/wp/v2/posts?_embed`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setPosts(data);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => {\n        setIsLoaded(true);\n      });\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n\n    // Render a specific post if it was requested.\n    if (!!params.id) {\n\n      // See if we have the requested post, if we don't have it say it is not found, otherwise render it.\n      let post = posts.find(obj => obj.id === parseInt(params.id));\n      if (!post) {\n        return <NotFound/>;\n      }\n\n      return (\n        <div className=\"post-page\" key={post.id}>\n          <div className=\"thumbnail\">\n            <img alt={post.slug} src={niceImageUrl(post)}/>\n          </div>\n          <div className=\"title\">\n            <h2>{post.title.rendered}</h2>\n          </div>\n          <div className=\"date\">\n            <p>Date: {(new Date(post.date_gmt)).toLocaleString()}</p>\n          </div>\n          <div className=\"content\">\n            {ReactHtmlParser(post.content.rendered)}\n          </div>\n        </div>\n      );\n\n    } else {\n\n      //Render a list of all posts if a specific post was not requested.\n      return (\n        <div className=\"posts\">\n          <h1>Hey, here are some blog posts!</h1>\n          {posts.map(post => (\n            <div className=\"post-item\" key={post.id}>\n              <Link to={`post/${post.id}`}>\n                <div className=\"thumbnail\">\n                  <img alt={post.slug} src={niceImageUrl(post)}/>\n                </div>\n                <h2>{post.title.rendered}</h2>\n                <p>Date: {(new Date(post.date_gmt)).toLocaleString()}</p>\n              </Link>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Posts;\n","import \"./index.scss\";\nimport {useEffect, useState} from \"react\";\n\nconst Banner = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [banner, setBanner] = useState([]);\n\n  useEffect(() => {\n    fetch(`/wp-json/wp/v2/homepage_image`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setBanner(data);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => {\n        setIsLoaded(true);\n      });\n  }, []);\n\n  let imgUrl = (error || !isLoaded) ? \"/blog/logo512.png\" : banner.url;\n\n  return (\n    <div className=\"banner\"\n         style={{\n           backgroundImage: `url(${imgUrl})`\n         }}\n    >\n      &nbsp;\n    </div>\n  );\n\n}\n\nexport default Banner;\n","import './App.scss';\nimport { Route, Routes } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport NotFound from \"./components/NotFound\";\nimport Banner from \"./components/Banner\";\n\nconst App = () => {\n  return (\n      <div className=\"App\">\n        <Banner/>\n        <Routes>\n          <Route exact path=\"/\" element={<Posts />} />\n          <Route path=\"/post/:id\" element={<Posts />} />\n          <Route path=\"*\" element={<NotFound />}/>\n        </Routes>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/blog\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}